/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

import groovy.sql.Sql

import java.sql.SQLException

apply plugin: 'liquibase'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.liquibase:liquibase-core:3.4.1'
        classpath "org.liquibase:liquibase-gradle-plugin:1.1.1"
        classpath 'org.postgresql:postgresql:42.2.6'
    }
}

ext {
    dbHost = System.getenv("POSTGRES_HOST") ?: "localhost"
    dbPort = System.getenv("POSTGRES_PORT") ?: 5432
    dbName = System.getenv("POSTGRES_DB") ?: "postgres"
    dbUser = System.getenv("POSTGRES_USER") ?: "postgres"
    dbPassword = System.getenv("POSTGRES_PASSWORD") ?: "postgres"
    dbUrl = "jdbc:postgresql://$dbHost:$dbPort/$dbName"
}

def changeLog = '$projectDir/src/main/db/changelog.xml'

task waitForDb() {
    for (int i = 0; i < 10; ++i) {
        try {
            def sqlClassLoader = Sql.classLoader
            project.buildscript.configurations.classpath.each {
                sqlClassLoader.addURL it.toURI().toURL()
            }
            def sql = Sql.newInstance(dbUrl, dbUser, dbPassword, 'org.postgresql.Driver')
            sql.execute("select 1;")
            sql.close()
            println "Connected to db ${dbUrl}"
            break
        } catch (SQLException ex) {
            println "Could not connect to db: ${ex.toString()}"
            sleep(1000)
        }
    }
}

liquibase {
    activities {
        main {
            changeLogFile "src/main/db/changelog.xml"
            url dbUrl
            username dbUser
            password dbPassword
            logLevel "off"
        }
    }
}

